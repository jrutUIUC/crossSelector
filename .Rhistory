setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Teaching/CPSC554/2024/Class 16")
dir()
geno<- read.csv('WheatGenoAll.csv')
pheno<- read.csv('WheatPheno21-23Data.csv')
head(pheno)
str(pheno)
y<- pheno$Heading.time...Julian.date..JD..CO_321.0001233)
y<- pheno$Heading.time...Julian.date..JD..CO_321.0001233
y
hist(y)
head(pheno)
#Step 1 - Single Trial Analysis
unique(pheno$studyName)
sub<- which(pheno$studyName == 'Pr_Neo_21')
subix<- which(pheno$studyName == 'Pr_Neo_21')
phenosub<- droplevels.data.frame(pheno[subix,])
head(phenosub)
y<- phenosub$Heading.time...Julian.date..JD..CO_321.0001233
y
hist(y)
str(pheno)
phenosub$blockNumber<- as.factor(phenosub$blockNumber)
X<- model.matrix(Heading.time...Julian.date..JD..CO_321.0001233~1+blockNumber)
X<- model.matrix(phenosub, Heading.time...Julian.date..JD..CO_321.0001233~1+blockNumber)
X<- model.matrix(Heading.time...Julian.date..JD..CO_321.0001233~1+blockNumber,phenosub)
X
Z<- model.matrix(Heading.time...Julian.date..JD..CO_321.0001233~1+germplasmName,phenosub)
library(rrBLUP)
mod<- mixed.solve(y, Z, X=X)
mod
mod$Vu/mod$Ve
mod$Vu/(mod$Ve+mod$Vu)
summary(mod)
str(mod)
library(emmeans)
mod<- lm(phenosub$Heading.time...Julian.date..JD..CO_321.0001233~1+blockNumber, phenosub)
mdo
mod
mod<- lm(phenosub$Heading.time...Julian.date..JD..CO_321.0001233~1+blockNumber+genotypeName, phenosub)
str(phenosub)
mod<- lm(phenosub$Heading.time...Julian.date..JD..CO_321.0001233~1+blockNumber+germplasmName, phenosub)
mns<- emmeans(mod, specs='germplasmName')
mns
as.data.frame(mns)
mns<- as.data.frame(mns)
mns
plot(residuals(mod))
mns<- data.frame(mns, trial='Pr_Neo_21')
mns
library(rrBLUP)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Teaching/CPSC554/2024/Class 16")
geno<- read.csv('WheatGenoAll.csv')
pheno<- read.csv('WheatPheno21-23Data.csv')
library(emmeans)
library(rrBLUP)
#Single trial analysis
str(pheno)
View(pheno)
#Single trial analysis
phenosub<- pheno[which(pheno$studyName=='Pr_Neo_21'), ]
phenosub$blockNumber<- as.factor(phenosub$blockNumber)
model<- lm(Heading.time...Julian.date..JD..CO_321.0001233~1+germplasmName+blockNumber, phenosub)
means<- emmeans(model, specs='germplasmName')
means<- data.frame(means)
View(means)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Teaching/CPSC554/2024/Class 16")
geno<- read.csv('WheatGenoAll.csv')
pheno<- read.csv('WheatPheno21-23Data.csv')
library(emmeans)
library(rrBLUP)
#Single trial analysis
phenosub<- pheno[which(pheno$studyName=='Pr_Neo_21'), ]
phenosub$blockNumber<- as.factor(phenosub$blockNumber)
model<- lm(Heading.time...Julian.date..JD..CO_321.0001233~1+germplasmName+blockNumber, phenosub)
means<- emmeans(model, specs='germplasmName')
means<- data.frame(means)
View(means)
unique(pheno$studyName)
stdnms<- unique(pheno$studyName)
i=1
stdnms[i]
stdnms[2]
stdnms<- unique(pheno$studyName)
for(i in 1:length(stdnms)){
#Single trial analysis
phenosub<- pheno[which(pheno$studyName==stdnms[i]), ]
phenosub$blockNumber<- as.factor(phenosub$blockNumber)
model<- lm(Heading.time...Julian.date..JD..CO_321.0001233~1+germplasmName+blockNumber, phenosub)
means<- emmeans(model, specs='germplasmName')
means<- data.frame(means)
means<- data.frame(means, study=stdnms[i])
if(i==1){
meansAll<- means
}else{
meansAll<- rbind(meansAll, means)
}
}
View(meansAll)
plot(meansAll$SE)
library(lme4)
head(meansAll)
model2<- lmer(emmean~1+(1|germplasmName)+(1|study),
weights=1/meansAll$SE^2, meansAll)
model2<- lmer(emmean~1+(1|germplasmName)+(1|study),
weights=1/meansAll$SE^2, meansAll)
summary(model2)
str(model2)
library(arm)
blups<- ranef(model2)$germplasmName
blups
hist(blups)
hist(blups[,1])
blupsSe<- se.ranef(model2)$germplasmName
blupsSe
head(blupsSe)
blupsSe<- blupsSe[,1]
blupsSe
blupsPEV<- blupsSe^2
summary(model2)
rel<- 1- blupsPEV/1.267
rel
hist(rel)
summary(model2)
VarCorr(model2)
as.data.frame(VarCorr(model2))
as.data.frame(VarCorr(model2))['germplasmName', 'vcov']
as.data.frame(VarCorr(model2))['germplasmName', 'vcov']
as.data.frame(VarCorr(model2))[1, 'vcov']
##Step 2 of analysis - mixed model, genotypes iid
#This time using the rrBLUP package
y<- meansAll$emmean
X<- model.matrix(emmean~1+study, meansAll)
View(x)
View(X)
head(meansAll)
Z<- model.matrix(emmean~0+germplasmName, meansAll)
View(Z)
#pre-multiply design matrices by the inverse of the square root of the
#R matrix to account for heterogenous error variances
y2<- y/meansAll$SE
X2<- X/meansAll$SE
Z2<- Z/meansAll$SE
modMixedsolve<- mixed.solve(y2, Z=Z2, X=X2)
meansAll
head(meansALl)
head(meansAll)
unique(meansAll$study)
which(meansAll$study %in% c('Pr_Neo_21', 'Pr_Urb_21'))
##Step 2 of analysis - mixed model, genotypes iid
#This time using the rrBLUP package
ix<- which(meansAll$study %in% c('Pr_Neo_21', 'Pr_Urb_21'))
meansAll<- meansAll[-ix,]
y<- meansAll$emmean
X<- model.matrix(emmean~1+study, meansAll)
Z<- model.matrix(emmean~0+germplasmName, meansAll)
#pre-multiply design matrices by the inverse of the square root of the
#R matrix to account for heterogenous error variances
y2<- y/meansAll$SE
X2<- X/meansAll$SE
Z2<- Z/meansAll$SE
modMixedsolve<- mixed.solve(y2, Z=Z2, X=X2)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Teaching/CPSC554/2024/Class 16")
geno<- read.csv('WheatGenoAll.csv')
pheno<- read.csv('WheatPheno21-23Data.csv')
library(emmeans)
library(rrBLUP)
library(lme4)
stdnms<- unique(pheno$studyName)
for(i in 1:length(stdnms)){
#Single trial analysis
phenosub<- pheno[which(pheno$studyName==stdnms[i]), ]
phenosub$blockNumber<- as.factor(phenosub$blockNumber)
model<- lm(Heading.time...Julian.date..JD..CO_321.0001233~1+germplasmName+blockNumber, phenosub)
means<- emmeans(model, specs='germplasmName')
means<- data.frame(means)
means<- data.frame(means, study=stdnms[i])
if(i==1){
meansAll<- means
}else{
meansAll<- rbind(meansAll, means)
}
}
#Step 2 of analysis - mixed model, genotypes iid
model2<- lmer(emmean~1+(1|germplasmName)+(1|study),
weights=1/meansAll$SE^2, meansAll)
library(arm)
blups<- ranef(model2)$germplasmName
blupsSe<- se.ranef(model2)$germplasmName
blupsSe<- blupsSe[,1]
blupsPEV<- blupsSe^2
rel<- 1- blupsPEV/as.data.frame(VarCorr(model2))[1, 'vcov']
y<- meansAll$emmean
X<- model.matrix(emmean~1+study, meansAll)
Z<- model.matrix(emmean~0+germplasmName, meansAll)
det(X)
det(Z)
Xi<- solve(X1)
Xi<- solve(X2)
Xi<- solve(X2)
library(rrBLUP)
install.packages('rrBLUP')
install.packages("rrBLUP")
library(rrBLUP)
y<- meansAll$emmean
X<- model.matrix(emmean~1+study, meansAll)
Z<- model.matrix(emmean~0+germplasmName, meansAll)
#pre-multiply design matrices by the inverse of the square root of the
#R matrix to account for heterogenous error variances
y2<- y/meansAll$SE
X2<- X/meansAll$SE
Z2<- Z/meansAll$SE
modMixedsolve<- mixed.solve(y2, Z=Z2, X=X2)
pheno<- read.csv('WheatPheno21-23Data.csv')
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Teaching/CPSC554/2024/Class 16")
geno<- read.csv('WheatGenoAll.csv')
pheno<- read.csv('WheatPheno21-23Data.csv')
library(emmeans)
library(rrBLUP)
library(lme4)
stdnms<- unique(pheno$studyName)
for(i in 1:length(stdnms)){
#Single trial analysis
phenosub<- pheno[which(pheno$studyName==stdnms[i]), ]
phenosub$blockNumber<- as.factor(phenosub$blockNumber)
model<- lm(Heading.time...Julian.date..JD..CO_321.0001233~1+germplasmName+blockNumber, phenosub)
means<- emmeans(model, specs='germplasmName')
means<- data.frame(means)
means<- data.frame(means, study=stdnms[i])
if(i==1){
meansAll<- means
}else{
meansAll<- rbind(meansAll, means)
}
}
#Step 2 of analysis - mixed model, genotypes iid
model2<- lmer(emmean~1+(1|germplasmName)+(1|study),
weights=1/meansAll$SE^2, meansAll)
library(arm)
blups<- ranef(model2)$germplasmName
blupsSe<- se.ranef(model2)$germplasmName
blupsSe<- blupsSe[,1]
blupsPEV<- blupsSe^2
rel<- 1- blupsPEV/as.data.frame(VarCorr(model2))[1, 'vcov']
##Step 2 of analysis - mixed model, genotypes iid
#This time using the rrBLUP package
#ix<- which(meansAll$study %in% c('Pr_Neo_21', 'Pr_Urb_21'))
#meansAll<- meansAll[-ix,]
y<- meansAll$emmean
X<- model.matrix(emmean~1+study, meansAll)
Z<- model.matrix(emmean~0+germplasmName, meansAll)
#pre-multiply design matrices by the inverse of the square root of the
#R matrix to account for heterogenous error variances
y2<- y/meansAll$SE
X2<- X/meansAll$SE
Z2<- Z/meansAll$SE
modMixedsolve<- mixed.solve(y2, Z=Z2, X=X2)
X2
y<- meansAll$emmean
X<- model.matrix(emmean~0+study, meansAll)
Z<- model.matrix(emmean~0+germplasmName, meansAll)
#pre-multiply design matrices by the inverse of the square root of the
#R matrix to account for heterogenous error variances
y2<- y/meansAll$SE
X2<- X/meansAll$SE
Z2<- Z/meansAll$SE
modMixedsolve<- mixed.solve(y2, Z=Z2, X=X2)
str(modMixedsolve)
VarCorr(model2)
as.data.frame(VarCorr(model2))
VarCorr(model2)
as.data.frame(VarCorr(model2))
str(modMixedsolve)
geno[1:5, 1:5]
geno[,X]
geno[,'X']
View(geno[,'X'])
View(as.data.frame(geno[,'X']))
grep('P',geno[,'X'])
geno[,'X'][grep('P',geno[,'X'])]
geno[,'X'][grep('US17',geno[,'X'])]
geno[,'X'][grep('12-',geno[,'X'])]
geno[,'X'][grep('IL12-',geno[,'X'])]
geno[,'X'][grep('26004',geno[,'X'])]
geno[,'X'][grep('ILUS',geno[,'X'])]
str(modMixedsolve)
modMixedsolve$u
ranef(model2)$germplasmName
ranef(model2)$germplasmName[,1]
ranef(model2)$germplasmName[,1]
modMixedsolve$u
modMixedsolve$u,
plot(ranef(model2)$germplasmName[,1], modMixedsolve$u)
plot(ranef(model2)$germplasmName[,1], modMixedsolve$u)
colnames(Z2)
gsub('germplasmName', '', colnames(Z2))
gsub('germplasmName', '', colnames(Z2)) %in% geno$X
gsub('germplasmName', '', colnames(Z2)) !%in% geno$X
unique(gsub('germplasmName', '', colnames(Z2)) %in% geno$X)
which(gsub('germplasmName', '', colnames(Z2)) %in% geno$X ==FALSE)
modMixedsolve$u
plot(ranef(model2)$germplasmName[,1], modMixedsolve$u)
modMixedsolve<- mixed.solve(y2, Z=Z2, X=X2)
geno[1:5, 1:5]
geno[1:5, 1:5]
geno[,2]
geno[,3]
geno[,4]
geno[,5]
tail(geno[,5])
tail(geno[,5])
dim(geno)
colnames(Z2)
genoNames<- colnames(Z2)
genoNames<- gsub('germplasmName', "", genoNames)
genoNames
which(genoNames %in% geno$X)
which(geno$X %in% genoNames)
genoSub<- geno[which(geno$X %in% genoNames),]
genoNames %in% geno$X
which(genoNames %in% geno$X ==FALSE)
dim(genoSub)
genoSub$X %in% genoNames
which(genoSub$X %in% genoNames ==FALSE)
dim(genoSub)
dim(Z2)
which(meansAll$germplasmName %in% genoSub$X)
#Next we need to remove individuals in the phenotypic data
#that were not genotyped
meansAllsub<- meansAll[which(meansAll$germplasmName %in% genoSub$X),]
str(meansALl)
str(meansAll)
meansAllsub<- droplevels.data.frame(meansAllsub)
#create design matrices again
y<- meansAllsub$emmean
X<- model.matrix(emmean~0+study, meansAllsub)
Z<- model.matrix(emmean~0+germplasmName, meansAllsub)
#pre-multiply design matrices by the inverse of the square root of the
#R matrix to account for heterogenous error variances
y2<- y/meansAllsub$SE
X2<- X/meansAllsub$SE
Z2<- Z/meansAll$SE
#create design matrices again
y<- meansAllsub$emmean
X<- model.matrix(emmean~0+study, meansAllsub)
Z<- model.matrix(emmean~0+germplasmName, meansAllsub)
#pre-multiply design matrices by the inverse of the square root of the
#R matrix to account for heterogenous error variances
y2<- y/meansAllsub$SE
X2<- X/meansAllsub$SE
Z2<- Z/meansAllsub$SE
dim(Z2)
dim(genoSub)
i-2
i=2
mrk<- genoSub[,i]
mrk
table(mrk)
tb<- table(mrk)
tb[1]
tb[1]*2 + tb[2]
tb[1]*2 + tb[2]
tb
sum(tb)
sum(tb)*2
(tb[1]*2 + tb[2])/sum(tb)*2
tb[1]*2 + tb[2]
sum(tb)
sum(tb)*2
(tb[1]*2 + tb[2])/(sum(tb)*2)
q<- 1-p
p<- (tb[1]*2 + tb[2])/(sum(tb)*2)
q<- 1-p
min(c(p, q))
p
mafs<- c()
for( i in 2:ncol(genoSub)){
mrk<- genoSub[,i]
tb<- table(mrk)
p<- (tb[1]*2 + tb[2])/(sum(tb)*2)
q<- 1-p
maf<- min(c(p, q))
mafs<- append(mafs, maf)
}
mrkMean<- mean(genoSub[,i], na.rm=TRUE)
i=245
mean(genoSub[,i])
mrkMean<- mean(genoSub[,i], na.rm=TRUE)
mrkMean
i=246
i=245
mrk<- genoSub[,i]
mrk
tb<- table(mrk)
tb
i=246
mrk<- genoSub[,i]
tb<- table(mrk)
tb
table(mrk)
mrk
i
i=246
i=2
which(is.na(mrk))
which(is.na(mrk))
mrk<- genoSub[,i]
i
mrk
which(is.na(mrk))
i
which(is.na(mrk))
mrk
tb<- table(mrk)
tb
mafs<- c()
for( i in 2:ncol(genoSub)){
mrk<- genoSub[,i]
tb<- table(mrk)
tb<- (tb[1]*2 + tb[2])/(sum(tb)*2)
q<- 1-p
maf<- min(c(p, q))
mafs<- append(mafs, maf)
}
mafs
mafs<- c()
for( i in 2:ncol(genoSub)){
mrk<- genoSub[,i]
tb<- table(mrk)
tb<- (tb[1]*2 + tb[2])/(sum(tb)*2)
q<- 1-p
maf<- min(c(p, q))
mafs<- append(mafs, maf)
}
p
mafs
#Eliminate monomorphic markers
mafs<- c()
for( i in 2:ncol(genoSub)){
mrk<- genoSub[,i]
tb<- table(mrk)
p<- (tb[1]*2 + tb[2])/(sum(tb)*2)
q<- 1-p
maf<- min(c(p, q))
mafs<- append(mafs, maf)
}
mafs
plot(maf)
plot(mafs)
hist(mafs)
min(mafs)
which(is.na(mafs))
i=245
mrk<- genoSub[,i]
mrk
tb<- table(mrk)
tb
i
246
mrk<- genoSub[,i]
tb<- table(mrk)
mrk
tb
p<- (tb[1]*2 + tb[2])/(sum(tb)*2)
q<- 1-p
maf<- min(c(p, q))
maf
which(is.na(mafs))
i=246
mrk<- genoSub[,i]
tb<- table(mrk)
p<- (tb[1]*2 + tb[2])/(sum(tb)*2)
q<- 1-p
maf<- min(c(p, q))
maf
tb
mrk
mafs
which(mafs>= 0.01)
which(mafs>= 0.01)
subMrk<- which(mafs>= 0.01)
genoSub2<- genoSub[,-1]
genoSub3<- genoSub2[,subMrk]
dim(genoSub3)
dim(Z2)
colnames(Z2)[1:10]
genoSub[1:10,1]
#Create the relationship matrix
A<- A.mat(genoSub3)
A[1:5, 1:5]
row.names(A)<- genoSub$X
conames(A)<- genoSub$X
colnames(A)<- genoSub$X
A[1:5, 1:5]
?mixed.solve
#For the Z2 matrix, make it the same order as in A
Z2nms<- colnames(Z2)
Z2nms
Z2nms<- gsub('germplasmName', "" ,Z2nms)
Z2nms
A2<- A[Z2nms, Z2nms]
A2[1:5, 1:5]
Z2nms[1:5]
#Fit the mixed model
GBLUP<- mixed.solve(y2, Z2, K2, Z2)
#Fit the mixed model
GBLUP<- mixed.solve(y2, Z2, A2, Z2)
?mixed.solve
#Fit the mixed model
GBLUP<- mixed.solve(y2, Z2, A2, X2)
str(GBLUP)
ls()
save.image('GBLUP model.RData')
