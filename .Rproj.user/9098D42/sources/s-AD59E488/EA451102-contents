setwd("~/Documents/wheat advanced selection 2019")
library(plyr)
library(reshape)

#files
w17<-read.csv("wheat2017.csv",na.strings = c("NA"))
w18<-read.csv("wheat2018.csv")
w19<-read.csv("wheat2019adv2.csv")
datall<- rbind.fill(w17, w18)
datall<- rbind.fill(datall, w19)


#group prelims together
datall$r_expt<- gsub("HY_Urb", "HYUrb", datall$r_expt)
mat<- matrix(unlist(strsplit(as.character(datall$r_expt), split="_")), nrow=3)
exp<- mat[1,]
exp[grep('Pr', exp)]<- "Pr"
exp[grep('PR', exp)]<- 'Pr'
experiment<- paste(exp, datall$loccode, datall$year1)
datall<- data.frame(datall, test=experiment)
datall<- datall[-which(datall$yld_bu==-9),]
datall$name<- as.character(datall$name)
datall$name<- gsub('IL1', '1', datall$name)
datall$name<- gsub('IL0', '0', datall$name)

neg9NA<- function(vec){
    if(-9 %in% vec){
      vec[which(vec==-9)]<- NA
    }
    return(vec)
}

datall<- lapply(datall, neg9NA)
datall<- as.data.frame(datall)

#check lines across experiments
occ<- cast(datall, name~r_expt, value='yld_bu')

zeroNA<- function(vec){
  vec[which(vec==0)]<- NA
  return(vec)
}
nonzero1<- function(vec){
  vec[-which(is.na(vec))]<- 1
  return(vec)
}
occ<- apply(occ, 2, zeroNA)
occ<- apply(occ, 2, nonzero1)
sm<- rowSums(occ, na.rm=TRUE)

exp_kask<- names(na.omit(occ[which(row.names(occ)== 'Kaskaskia'),]))
exp_4415<- names(na.omit(occ[which(row.names(occ)== '07-4415'),]))
hascks<- intersect(exp_kask,exp_4415)

#subset datall to thoes that have the checks
datall2<- datall[which(datall$r_expt %in% hascks),]

#make block a factor
datall2$block<- as.character(datall2$block)

#make zero values to NAs
datall2<- as.data.frame(lapply(datall2,  zeroNA))

#estimate the trial effect using the checks only
ckdat<- droplevels.data.frame(datall2[which(datall2$name %in% c('Kaskaskia', '07-4415')),])
library(lme4)
library(emmeans)

#yield
m<- lm(yld_bu~1+name+r_expt, data=ckdat)
yldM<- as.data.frame(emmeans(m, specs='r_expt'))
CKyld_bu<- yldM[match(datall2$r_expt,yldM[,1]),2]
CKyld_bu<- CKyld_bu-mean(CKyld_bu, na.rm=T)


#twt
m<- lm(twt_lb~1+name+r_expt, data=ckdat)
twtM<- as.data.frame(emmeans(m, specs='r_expt'))
CKtwt_lb<- twtM[match(datall2$r_expt,twtM[,1]),2]
CKtwt_lb<- CKtwt_lb-mean(CKtwt_lb, na.rm=T)

#julian
m<- lm(julian~1+name+r_expt, data=ckdat)
julM<- as.data.frame(emmeans(m, specs='r_expt'))
CKjulian<- julM[match(datall2$r_expt,julM[,1]),2]
CKjulian<- CKjulian-mean(CKjulian, na.rm=T)

#ht
m<- lm(ht~1+name+r_expt, data=ckdat)
htM<- as.data.frame(emmeans(m, specs='r_expt'))
CKht<- htM[match(datall2$r_expt,htM[,1]),2]
CKht<- CKht-mean(CKht, na.rm=T)

datall2<- data.frame(datall2, CKyld_bu,CKtwt_lb,CKjulian,CKht)

#estimate yield blups
datall2$year1<- as.character(datall2$year1)
m<- lmer(yld_bu~1+CKyld_bu+(1|name)+(1|loccode:year1)+(1|block:r_expt)+(1|loccode:year1:name) , data=datall2)
rf<- ranef(m)$name
df1<- data.frame(name=row.names(rf), yld_bu=rf[,1]+fixef(m)[1])

#estimate twt blups
m<- lmer(twt_lb~1+CKtwt_lb+(1|name)+(1|loccode:year1)+(1|block:r_expt)+(1|loccode:year1:name), data=datall2)
rf<- ranef(m)$name
df2<- data.frame(name=row.names(rf), twt_lb=rf[,1]+fixef(m)[1])

#estimate julian blups
datall2[which(datall2$julian<100),'julian']= datall2[which(datall2$julian<100),'hddt']+120
m<- lmer(julian~1+CKjulian+(1|name)+(1|loccode:year1)+(1|block:r_expt), data=datall2)
rf<- ranef(m)$name
df3<- data.frame(name=row.names(rf), julian=rf[,1]+fixef(m)[1])

#estimate ht blups
m<- lmer(ht~1+CKht+(1|name)+(1|loccode:year1)+(1|block:r_expt), data=datall2)
rf<- ranef(m)$name
df4<- data.frame(name=row.names(rf), ht=rf[,1]+fixef(m)[1])

#scab blups
scbA<- data.frame(set='Adv', read.csv("Advanced Wheat Scab.csv", row.names=1))
scbP<- data.frame(set='Pre', read.csv("~/Documents/Wheat prelim selection 2019/Prelim Wheat Scab.csv", row.names=1))
cks<-intersect(scbA$name, scbP$name)
#advanced check average
mean(scbA[which(scbA$name %in% cks),'ISK'])
#prelim check average
mean(scbP[which(scbP$name %in% cks),'ISK'])
scbAll<- rbind(scbA[,c('name', 'set', 'ISK')],scbP[,c('name', 'set', 'ISK')])
scbAll2<- cast(scbAll, name~set, value='ISK')
scbAll2<- data.frame(name=scbAll2[,1],  ISK=rowMeans(scbAll2[,-1], na.rm=TRUE))

#check relationship between ISK and DON
dt<- read.csv("~/Documents/Crosses to make 2019/ISK DON calibration data.csv")
m<- lm(DON.level~1+FHB.ISK.index, dt)


#mergeall
all<- merge(merge(df1, df2, by='name'),
  merge(df3, df4, by='name'))
all<- merge(all, scbAll2)

#profit fcn
netMerit<- function(yld, twt, isk, julian){
  donHat<- c(isk-.14)*0.057
  donDiscount<- donHat*-.2
  soy_yld_gain<- 132-julian
  soy_profit_gain<- soy_yld_gain*9
  twtDiscount<- c(58-twt)*-.2
  wheat_price<- 4.5+donDiscount+twtDiscount
  wheatProfit<- yld*wheat_price
  wheatProfit<- wheatProfit+ soy_profit_gain
  return(wheatProfit)
}

profit<- netMerit(all$yld_bu, all$twt_lb, all$ISK, all$julian)
all<- cbind(all, profit)
all<- all[order(-all$profit),]


#generate profit
mat<- matrix(nrow=576, ncol=576)
row.names(mat)<- all[,1]
colnames(mat)<- all[,1]
for(i in 1:ncol(mat)){
  for(j in 1:nrow(mat)){
  vec<- colMeans(all[c(j,i),-1])
  prof<- netMerit(vec['yld_bu'], vec['twt_lb'], vec['ISK'], vec['julian'])
  mat[j,i]<- prof
  }
}
mat[lower.tri(mat)]<- NA
diag(mat)<- NA
tbl<- melt(mat)
tbl<- na.omit(tbl)
colnames(tbl)<- c('p1', 'p2', 'profit')

#create table other taits
matY<- matrix(nrow=576, ncol=576)
row.names(matY)<- all[,1]
colnames(matY)<- all[,1]
matJ<- matrix(nrow=576, ncol=576)
row.names(matJ)<- all[,1]
colnames(matJ)<- all[,1]
matH<- matrix(nrow=576, ncol=576)
row.names(matH)<- all[,1]
colnames(matH)<- all[,1]
matT<- matrix(nrow=576, ncol=576)
row.names(matT)<- all[,1]
colnames(matT)<- all[,1]
matI<- matrix(nrow=576, ncol=576)
row.names(matI)<- all[,1]
colnames(matI)<- all[,1]


for(i in 1:ncol(mat)){
  for(j in 1:nrow(mat)){
    vec<- colMeans(all[c(j,i),-1])
    matY[j,i]<- vec['yld_bu']
    matJ[j,i]<- vec['julian']
    matH[j,i]<- vec['ht']
    matT[j,i]<- vec['twt_lb']
    matI[j,i]<- vec['ISK']
  }
}
matY[lower.tri(matY)]<- NA
diag(matY)<- NA
tblY<- melt(matY)
tblY<- na.omit(tblY)
colnames(tblY)<- c('p1', 'p2', 'yield')

matJ[lower.tri(matJ)]<- NA
diag(matJ)<- NA
tblJ<- melt(matJ)
tblJ<- na.omit(tblJ)
colnames(tblJ)<- c('p1', 'p2', 'julian')

matH[lower.tri(matH)]<- NA
diag(matH)<- NA
tblH<- melt(matH)
tblH<- na.omit(tblH)
colnames(tblH)<- c('p1', 'p2', 'ht')

matT[lower.tri(matT)]<- NA
diag(matT)<- NA
tblT<- melt(matT)
tblT<- na.omit(tblT)
colnames(tblT)<- c('p1', 'p2', 'twt')

matI[lower.tri(matI)]<- NA
diag(matI)<- NA
tblI<- melt(matI)
tblI<- na.omit(tblI)
colnames(tblI)<- c('p1', 'p2', 'isk')

tblAll<- cbind(tbl[,c(1:3)], tblY[,3], tblJ[,3], tblT[,3], tblH[,3],tblI[,3])
colnames(tblAll)<- c('p1', 'p2', 'profit', 'yield', 'julian', 'twt', 'ht', 'isk')
tblAll<- tblAll[order(-tblAll$profit),]
crossesA<- paste(tblAll$p1, tblAll$p2, sep="/")
crossesB<- paste(tblAll$p2, tblAll$p1, sep="/")

write.csv(tblAll, file='All potential combinations.csv')

#note any crosses that were already made
F1a<- read.csv("2019 Wheat F1s.csv")
F1b<- read.csv("2020 F3 Bulks.csv")

crossesMade2019<- c(which(crossesA %in% gsub(" ", "", F1a[,3])), which(crossesB %in% gsub(" ", "", F1a[,3])))
crossesMade2018<- c(which(crossesA %in% gsub(" ", "", F1b[,3])), which(crossesB %in% gsub(" ", "", F1b[,3])))
tblAll<- data.frame(tblAll, cross_made=NA)
tblAll[crossesMade2019,"cross_made"]<- "cross made in 2019"
tblAll[crossesMade2018,"cross_made"]<- "cross made in 2018"
tblShort<- tblAll[which(tblAll$ht<37),]
singleCrosses<- tblShort[1:275,]
tb<- table(as.character(singleCrosses$p1), as.character(singleCrosses$p2))
parentSmry<- tb[order(-tb)]

ixSel<-c()
for( i in 1:length(names(parentSmry))){
  ixSel<- append(ixSel, grep(names(parentSmry)[i], F1a$pedigree))
}

potentialF1parents<- unique(F1a[ixSel,])

exoticF1s<- potentialF1parents[unique(c(grep("P", potentialF1parents$pedigree), grep("MO", potentialF1parents$pedigree), grep("OH", potentialF1parents$pedigree),
  grep("USDA", potentialF1parents$pedigree), grep("LES", potentialF1parents$pedigree))),]
exoticSingleCrosses<- exoticF1s[-grep("//", exoticF1s$pedigree),]
dim(exoticSingleCrosses)


df2<- data.frame(exoticSingleCrosses, p2=sample(rep(as.character( all[which(all$julian<130),1][1:7]),6)))
threeway<- df2
threeway[,c('name', 'p2')]
colnames(threeway)[2]<- 'p1'

singleCrosses2<- singleCrosses[which(is.na(singleCrosses$cross_made)),]

#limit each parent to 40 single crosses
prnts<- unique(as.character(singleCrosses2$p1),as.character(singleCrosses2$p2))
for(i in 1:length(prnts)){
  ixRow<- c(which(prnts[i]==as.character(singleCrosses2$p1)), which(prnts[i]==as.character(singleCrosses2$p2)))
  ordIxRow<- order(-singleCrosses2[ixRow,'profit'])
  if(length(ixRow[ordIxRow])>39){
    singleCrosses2[ixRow[ordIxRow],'cross_made'][1:40]<- rep('make cross for 2020', 40)
  }else{
    singleCrosses2[ixRow[ordIxRow],'cross_made']<- rep('make cross for 2020', length(ixRow[ordIxRow]))
  }
}

singleCrosses2<- singleCrosses2[which(singleCrosses2$cross_made=='make cross for 2020'),]


#exotic single crosses
exSx<- data.frame(p1=rep(c('OH13-88-61','OH15-191-52'), 8), 
           p2= rep(c("15-27270", "16-8048", "17-23904", "15-2639",'17-23868', '16-11226','15-4957','12-26004'))) 


AllCrossesToMake<- rbind(singleCrosses2[,c('p1', 'p2')], threeway[,c('p1', 'p2')])
AllCrossesToMake<- rbind(AllCrossesToMake, exSx)

write.csv(AllCrossesToMake, file="CrossingTable2019_2020.csv")

AllParents<- c(as.character(AllCrossesToMake$p1), as.character(AllCrossesToMake$p2))

tb<- table(c(as.character(AllCrossesToMake$p1), as.character(AllCrossesToMake$p2)))
tb<- tb[order(-tb)]
AllParents<- names(tb)


CrossingMatrix<- matrix(nrow=length(AllParents), ncol=length(AllParents))
colnames(CrossingMatrix)<- AllParents
row.names(CrossingMatrix)<- AllParents

crosses<- c(paste(AllCrossesToMake$p1,AllCrossesToMake$p2), paste(AllCrossesToMake$p2,AllCrossesToMake$p1))

#Fill in x's
for(i in 1:nrow(CrossingMatrix)){
  for(j in 1:ncol(CrossingMatrix)){
    tf<- paste(AllParents[i], AllParents[j]) %in% crosses
    if(tf){
      CrossingMatrix[i,j]<- 1
    }else{
      CrossingMatrix[i,j]<- 0
    }
  }
}


View(CrossingMatrix)
CrossingMatrix[upper.tri(CrossingMatrix)] <- NA
write.csv(CrossingMatrix, file="CrossingMatrix2019_2020.csv")

#decide on how to plant the parents
ct<-melt(CrossingMatrix)
ct<- ct[which(ct[,3]==1),]
tb<- table(c(as.character(ct[,1]), as.character(ct[,2])))
jul<- all[match(names(tb), all$name),'julian']
tb<- data.frame(tb)
tb<- data.frame(tb, maturity_category='Average', stringsAsFactors = FALSE)
q<- boxplot(jul)
tb[which(jul<q$stats[2,1]),'maturity_category']<- "Early"
tb[which(jul>q$stats[4,1]),'maturity_category']<- "Late"

additionalPots<- ceiling(tb$Freq/4)-2
additionalPots[which(additionalPots<0)]<- 0  
tb<- data.frame(tb, additionalPots)
tb<- data.frame(tb, potsDate1=2, potsDate2=2)
rE<- which(tb$maturity_category=='Early')
tb[rE, 'potsDate2'] <- tb[rE, 'potsDate2'] + tb[rE, 'additionalPots']
tb[rE, 'potsDate2'] <- tb[rE, 'potsDate2'] + ceiling(tb[rE, 'additionalPots'])
tb[rE, 'potsDate1'] <- tb[rE, 'potsDate1'] + ceiling(tb[rE, 'additionalPots']/2)

rL<- which(tb$maturity_category=='Late')
tb[rL, 'potsDate1'] <- tb[rL, 'potsDate1'] + tb[rL, 'additionalPots']
tb[rE, 'potsDate2'] <- tb[rE, 'potsDate2'] + ceiling(tb[rE, 'additionalPots'])
tb[rL, 'potsDate2'] <- tb[rL, 'potsDate2'] + ceiling(tb[rL, 'additionalPots']/2)

rA<- which(tb$maturity_category=='Average')
tb[rA, 'potsDate2'] <- tb[rA, 'potsDate2'] + ceiling(tb[rA, 'additionalPots']/2)
tb[rA, 'potsDate1'] <- tb[rA, 'potsDate1'] + ceiling(tb[rA, 'additionalPots']/2)
tb[which(tb[,2]==1),'potsDate1']<- 1
tb[which(tb[,2]==1),'potsDate2']<- 1

##############
betterISK<- all[c(match('07-4415', all$name),
  which(((22.71294-all$ISK)/22.71294 *100)>50)),]


all[match(c("15-30529", '15-23803', '15-2639', '14-DC-64-95-118', '14-28462', 
            '14-28444', '15-27270', '16-8048', '15-4957', '16-23972', '07-4415'), all$name),]

